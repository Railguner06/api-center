user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # 设定负载均衡的服务器列表（根据你的需求修改为自己的后端服务器 IP 和端口）
    upstream 10001 {
        least_conn;  # 使用最少连接调度算法

        # 替换为你自己的服务器 IP 地址和端口
        server 192.168.137.1:8080;
        server 192.168.137.1:8081;
    }

    # HTTP 服务器配置
    server {
        listen  80;  # 监听 80 端口，用于 HTTP 协议

        # 使用你的 IP 地址或域名进行访问
        server_name 192.168.137.1;  # 这里用本地的 IP 地址，可以更改为你自己的域名

        index index.html;  # 首页

        # 反向代理的路径（upstream绑定），location 后面设置映射的路径
        # location / {
        #    proxy_pass http://192.168.1.102:9001;
        # }

        # 反向代理的路径（upstream 绑定），将 /10001/ 映射到负载均衡器
        location /10001/ {
            rewrite ^/10001/(.*)$ /$1 break;
            proxy_pass http://10001;  # 将请求转发到 upstream 定义的后端服务
        }

    }
}
